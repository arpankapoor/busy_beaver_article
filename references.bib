
@article{yedidia_relatively_2016,
  title = {A {{Relatively Small Turing Machine Whose Behavior Is Independent}} of {{Set Theory}}},
  url = {http://arxiv.org/abs/1605.04343},
  abstract = {Since the definition of the Busy Beaver function by Rado in 1962, an interesting open question has been the smallest value of n for which BB(n) is independent of ZFC set theory. Is this n approximately 10, or closer to 1,000,000, or is it even larger? In this paper, we show that it is at most 7,910 by presenting an explicit description of a 7,910-state Turing machine Z with 1 tape and a 2-symbol alphabet that cannot be proved to run forever in ZFC (even though it presumably does), assuming ZFC is consistent. The machine is based on the work of Harvey Friedman on independent statements involving order-invariant graphs. In doing so, we give the first known upper bound on the highest provable Busy Beaver number in ZFC. To create Z, we develop and use a higher-level language, Laconic, which is much more convenient than direct state manipulation. We also use Laconic to design two Turing machines, G and R, that halt if and only if there are counterexamples to Goldbach's Conjecture and the Riemann Hypothesis, respectively.},
  timestamp = {2016-05-29T19:50:36Z},
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1605.04343},
  primaryClass = {cs},
  author = {Yedidia, Adam and Aaronson, Scott},
  date = {2016-05-13},
  keywords = {03D10 (Primary) 03C62; 68Q05; 97P40 (Secondary),Computer Science - Formal Languages and Automata Theory,Computer Science - Logic in Computer Science,F.1.1,F.4.1},
}

@inreference{_busy_2016,
  title = {Busy beaver},
  rights = {Creative Commons Attribution-ShareAlike License},
  url = {https://en.wikipedia.org/w/index.php?title=Busy_beaver&oldid=719770898},
  abstract = {The Busy Beaver Game consists of designing a halting, binary-alphabet Turing Machine which writes the most 1s on the tape, using only a limited set of states. The rules for the 2-state game are as follows: (i) the machine must have two states in addition to the halting state, and (ii) the tape starts with 0s only. As the player, you should conceive each state aiming for the maximum output of 1s on the tape while making sure the machine will halt eventually.
The Nth Busy Beaver, BB-n or simply "Busy Beaver" is the Turing Machine that wins the N-state Busy Beaver Game. That is, it attains the maximum number of 1s among all other possible N-state competing Turing Machines. The BB-2 turing machine, for instance, achieves four 1s in six steps.
The Busy Beaver Game has implications in computability theory, the halting problem, and complexity theory. The concept was first introduced by Tibor Radó in his 1962 paper, "On Non-Computable Functions".},
  timestamp = {2016-05-29T19:51:07Z},
  langid = {english},
  booktitle = {Wikipedia, the free encyclopedia},
  date = {2016-05-11},
}

@online{computerphile_busy_2014,
  title = {Busy {{Beaver Turing Machines}} - {{Computerphile}}},
  url = {https://www.youtube.com/watch?v=CE8UhcyJS0I},
  abstract = {The Busy Beaver game, pointless? Or a lesson in the problems of computability? - How do you decide if something can be computed or not?

Professor Brailsford's code and further reading: http://bit.ly/busybeaver 

Turing Machine Primer: http://youtu.be/DILF8usqp7M 
Busy Beaver Code: http://youtu.be/ZiTeuZSDB0U 
Ackermann Follow Up: http://youtu.be/uNACwX-O5lk 
Original 'Ackermann' Film (Most Difficult Program to Compute): http://youtu.be/i7sm9dzFtEI 

http://www.facebook.com/computerphile
https://twitter.com/computer\_phile

This video was filmed and edited by Sean Riley.

Computer Science at the University of Nottingham: http://bit.ly/nottscomputer

Computerphile is a sister project to Brady Haran's Numberphile. See the full list of Brady's video projects at: http://bit.ly/bradychannels},
  timestamp = {2016-05-29T19:51:38Z},
  director = {{Computerphile}},
  date = {2014-09-02},
  keywords = {Alan Turing (Computer Scientist),busy beaver,computer,computerphile,computers,computer science,professor david brailsford,tibor rado,turing,turing machine,university of nottingham}
}

@online{baez_busy_2016,
  title = {The {{Busy Beaver Game}}},
  url = {https://johncarlosbaez.wordpress.com/2016/05/21/the-busy-beaver-game/},
  abstract = {This month, a bunch of ‘logic hackers’ have been seeking to determine the precise boundary between the knowable and the unknowable. The challenge has been around for a long time. But on...},
  timestamp = {2016-05-29T19:58:58Z},
  journaltitle = {Azimuth},
  author = {Baez, John},
  date = {2016-05-21},
}

@online{krumins_busy_2009,
  title = {The {{Busy Beaver Problem}}},
  url = {http://www.catonmat.net/blog/busy-beaver/},
  timestamp = {2016-05-29T20:01:18Z},
  journaltitle = {good coders code, great coders reuse},
  author = {Krumins, Peteris},
  date = {2009-10-29},
}

@online{aaronson_who_1999,
  title = {Who {{Can Name}} the {{Bigger Number}}?},
  url = {http://www.scottaaronson.com/writings/bignumbers.html},
  timestamp = {2016-05-29T20:02:24Z},
  author = {Aaronson, Scott},
  date = {1999},
}

@article{rado_non-computable_1962,
  title = {On non-computable functions},
  volume = {41},
  issn = {0005-8580},
  doi = {10.1002/j.1538-7305.1962.tb00480.x},
  abstract = {The construction of non-computable functions used in this paper is based on the principle that a finite, non-empty set of non-negative integers has a largest element. Also, this principle is used only for sets which are exceptionally well-defined by current standards. No enumeration of computable functions is used, and in this sense the diagonal process is not employed. Thus, it appears that an apparently self-evident principle, of constant use in every area of mathematics, yields non-constructive entities.},
  timestamp = {2016-05-29T19:55:51Z},
  number = {3},
  journaltitle = {The Bell System Technical Journal},
  author = {Rado, T.},
  date = {1962-05},
  pages = {877--884},
}

@book{sipser_introduction_2012,
  location = {{Boston, MA}},
  edition = {3rd Ed},
  title = {Introduction to the theory of computation},
  isbn = {978-1-133-18779-0},
  timestamp = {2016-05-30T07:45:48Z},
  publisher = {{Course Technology Cengage Learning}},
  author = {Sipser, Michael},
  date = {2012}
}

